{"version":3,"sources":["pages/movies/styles.ts","context/search/index.tsx","components/input/styles.ts","components/input/index.tsx","components/movie-item/styles.ts","components/movie-item/index.tsx","domain/movies/index.ts","services/api/index.ts","pages/movies/index.tsx","components/routes/routes.ts","components/routes/index.tsx","App.tsx","styles/global-styles.ts","index.tsx","styles/theme.ts"],"names":["Container","styled","div","Header","header","theme","sizes","fontSizes","big","Form","form","Grid","createContext","colors","gray","Input","setSearch","React","useContext","SearchContext","type","name","placeholder","onChange","e","target","value","white","secondary","normal","primary","Button","button","MoveItem","movie","title","episode_id","created","Date","toLocaleDateString","emptyMovie","count","results","api","axios","create","baseURL","process","timeout","Movies","useState","movies","setMovies","search","useEffect","get","then","data","catch","console","log","src","alt","Provider","filter","toLowerCase","includes","map","options","path","exact","component","Routes","routes","o","App","GlobalStyles","createGlobalStyle","ReactDOM","render","StrictMode","black","small","document","getElementById"],"mappings":"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","file":"static/js/main.22c61ccc.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n\tmax-width: 1200px;\r\n\tmargin: 0 auto;\r\n\tpadding: 5px;\r\n`;\r\n\r\nexport const Header = styled.header`\r\n\twidth: 100%;\r\n\tmax-width: 1200px;\r\n\tmargin: 20px auto;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\r\n\timg {\r\n\t\twidth: 200px;\r\n\t}\r\n\r\n\tspan {\r\n\t\tfont-size: ${({ theme }) => theme.sizes.fontSizes.big};\r\n\t\ttext-decoration: underline;\r\n\t}\r\n`;\r\n\r\nexport const Form = styled.form`\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n\tmargin-top: 30px;\r\n\tdisplay: grid;\r\n\twidth: 100%;\r\n\tgrid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n\talign-self: center;\r\n\tjustify-self: center;\r\n\tgap: 5%;\r\n`;\r\n","import { createContext } from 'react';\r\n\r\nexport default createContext<any>({});\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 100%;\r\n\r\n\tinput {\r\n\t\twidth: 100%;\r\n\t\theight: 40px;\r\n\t\tpadding: 3px;\r\n\t\tborder: 1px solid ${({ theme }) => theme.colors.gray};\r\n\t\tborder-radius: 5px;\r\n\t\t::placeholder {\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from 'react';\r\nimport { Container } from './styles';\r\nimport SearchContext from '../../context/search';\r\nfunction Input() {\r\n\tconst context = React.useContext(SearchContext);\r\n\tconst { setSearch } = context;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"search\"\r\n\t\t\t\tname=\"search\"\r\n\t\t\t\tplaceholder=\"Digite aqui o nome de um filme\"\r\n\t\t\t\tonChange={(e) => setSearch(e.target.value)}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n\twidth: 250px;\r\n\theight: 300px;\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tbackground-color: ${({ theme }) => theme.colors.white};\r\n\tborder: 1px solid ${({ theme }) => theme.colors.secondary};\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 20px;\r\n\ttransition: 1s ease;\r\n\r\n\th3 {\r\n\t\tmargin-top: 20px;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: ${({ theme }) => theme.sizes.fontSizes.normal};\r\n\t}\r\n\r\n\tspan {\r\n\t\tmargin: 10px 0;\r\n\t\tfont-size: ${({ theme }) => theme.sizes.fontSizes.normal};\r\n\t\tcolor: ${({ theme }) => theme.colors.gray};\r\n\t}\r\n\r\n\th4 {\r\n\t\tmargin-top: 100px;\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: ${({ theme }) => theme.sizes.fontSizes.normal};\r\n\t\tcolor: ${({ theme }) => theme.colors.primary};\r\n\t}\r\n\r\n\tp {\r\n\t\tcolor: ${({ theme }) => theme.colors.primary};\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tcursor: pointer;\r\n\t\ttransform: scale(1.1);\r\n\t\tborder: 3px solid inherit;\r\n\t}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n\tmargin-top: 20px;\r\n\twidth: 80%;\r\n\theight: 40px;\r\n\tbackground-color: ${({ theme }) => theme.colors.white};\r\n\tcolor: ${({ theme }) => theme.colors.primary};\r\n\tfont-size: ${({ theme }) => theme.sizes.fontSizes.normal};\r\n\tborder: 1px solid ${({ theme }) => theme.colors.primary};\r\n\r\n\tborder-radius: 5px;\r\n\t&:hover {\r\n\t\tbackground-color: ${({ theme }) => theme.colors.primary};\r\n\t\tcolor: ${({ theme }) => theme.colors.white};\r\n\t}\r\n`;\r\n","import { Container, Button } from './styles';\r\nimport { SimpleMovie } from '../../domain/movies';\r\n\r\ntype Props = {\r\n\tmovie: SimpleMovie;\r\n};\r\n\r\nconst MoveItem = ({ movie }: Props) => {\r\n\tconst { title, episode_id, created } = movie;\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h3> {title}</h3>\r\n\t\t\t<span>Epsódio {episode_id}</span>\r\n\t\t\t<h4>Lançado:</h4>\r\n\t\t\t<p>{new Date(created).toLocaleDateString('pt-br')}</p>\r\n\t\t\t<Button type=\"button\">Selecionar</Button>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MoveItem;\r\n","export interface SimpleMovie {\r\n\ttitle: string;\r\n\tepisode_id: 4;\r\n\topening_crawl: string;\r\n\tdirector: string;\r\n\tproducer: string;\r\n\trelease_date: string;\r\n\tcreated: string;\r\n\tedited: string;\r\n\turl: string;\r\n}\r\n\r\nexport interface MovieProps {\r\n\tcount: number;\r\n\tresults: Array<SimpleMovie>;\r\n}\r\n\r\nexport const emptyMovie = (): MovieProps => {\r\n\treturn { count: 0, results: [] };\r\n};\r\n","import axios from 'axios';\nconst api = axios.create({\n\tbaseURL: process.env.REACT_APP_API_URL,\n\ttimeout: 3000,\n});\n\nexport default api;\n","import { Container, Header, Form, Grid } from './styles';\r\nimport SearchContext from '../../context/search';\r\nimport Input from '../../components/input';\r\nimport MovieItem from '../../components/movie-item';\r\nimport {\r\n\temptyMovie,\r\n\tMovieProps,\r\n\tSimpleMovie,\r\n} from './../../domain/movies/index';\r\nimport api from '../../services/api';\r\nimport React from 'react';\r\n\r\nconst Movies = () => {\r\n\tconst [movies, setMovies] = React.useState<MovieProps>(emptyMovie);\r\n\tconst [search, setSearch] = React.useState<string>('');\r\n\r\n\tReact.useEffect(() => {\r\n\t\tapi\r\n\t\t\t.get<MovieProps>('/films')\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\tsetMovies(data);\r\n\t\t\t})\r\n\t\t\t.catch(() => console.log('Houve um erro'));\r\n\t}, []);\r\n\r\n\tconst handleFilterMovies = (): SimpleMovie[] =>\r\n\t\tsearch\r\n\t\t\t? movies.results.filter((movie) =>\r\n\t\t\t\t\tmovie.title.toLowerCase().includes(search)\r\n\t\t\t  )\r\n\t\t\t: movies.results;\r\n\r\n\tconst renderMovieItem = () => {\r\n\t\tconst filterMovies = handleFilterMovies();\r\n\r\n\t\treturn filterMovies.map((movie) => (\r\n\t\t\t<MovieItem key={movie.episode_id} movie={movie} />\r\n\t\t));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Header>\r\n\t\t\t\t<img src=\"/pismo-logo.png\" alt=\"\" />\r\n\t\t\t\t<span> Filmes</span>\r\n\t\t\t</Header>\r\n\t\t\t<Form>\r\n\t\t\t\t<SearchContext.Provider value={{ setSearch }}>\r\n\t\t\t\t\t<Input />\r\n\t\t\t\t</SearchContext.Provider>\r\n\t\t\t\t<Grid>{renderMovieItem()}</Grid>\r\n\t\t\t</Form>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Movies;\r\n","import { ComponentType } from 'react';\r\nimport { RouteProps as ReactRouteProps } from 'react-router-dom';\r\nimport Movies from '../../pages/movies/index';\r\n\r\nexport interface RouteProps extends ReactRouteProps {\r\n\tcomponent: ComponentType;\r\n\tprivate?: boolean;\r\n\troutes?: RouteProps[];\r\n}\r\n\r\nconst options: RouteProps[] = [\r\n\t{\r\n\t\tpath: '/',\r\n\t\texact: true,\r\n\t\tcomponent: Movies,\r\n\t},\r\n\t{\r\n\t\tpath: '/movies',\r\n\t\texact: true,\r\n\t\tcomponent: Movies,\r\n\t},\r\n];\r\n\r\nexport default options;\r\n","import * as React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\nfunction Routes() {\r\n\treturn (\r\n\t\t<Switch>\r\n\t\t\t{routes.map((o) => (\r\n\t\t\t\t<Route key={o?.path as string} {...o} />\r\n\t\t\t))}\r\n\t\t</Switch>\r\n\t);\r\n}\r\n\r\nexport default Routes;\r\n","import Route from './components/routes';\n\nfunction App() {\n\treturn <Route />;\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  html {\r\n    font-size: 89%;  \r\n    box-sizing: border-box;\r\n    scroll-behavior: smooth;\r\n    font-family: 'Roboto', sans-serif;\r\n    \r\n  }\r\n  body {\r\n    background-color: #fff;\r\n    font-family: var(--font-family);\r\n    overflow-x: hidden;\r\n  }\r\n  \r\n  button{\r\n    &:hover{\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n    transition: 0.3s ease;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background: var(--shadow-color);\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background: #1c1733;\r\n  }\r\n  ::-webkit-scrollbar-thumb:hover {\r\n    background: #555;\r\n  }\r\n`;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { GlobalStyles } from './styles/global-styles';\nimport { ThemeProvider } from 'styled-components';\nimport { theme } from './styles/theme';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<App />\n\t\t\t\t<GlobalStyles />\n\t\t\t</BrowserRouter>\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","export const theme = {\n\tcolors: {\n\t\tgray: '#C5C5C5',\n\t\tsecondary: '#FFDFA2',\n\t\tprimary: '#E38903',\n\t\twhite: '#FFF',\n\t\tblack: '#000',\n\t},\n\tsizes: {\n\t\tfontSizes: {\n\t\t\tsmall: '0.8rem',\n\t\t\tnormal: '1rem',\n\t\t\tbig: '1.5rem',\n\t\t},\n\t},\n};\n"],"sourceRoot":""}